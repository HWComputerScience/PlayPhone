/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class PadConfig extends Serializable {
  private long swigCPtr;

  protected PadConfig(long cPtr, boolean cMemoryOwn) {
    super(openpadJNI.PadConfig_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PadConfig obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        openpadJNI.delete_PadConfig(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SWIGTYPE_p_Value serializeJSON(SWIGTYPE_p_Document__AllocatorType a) {
    return new SWIGTYPE_p_Value(openpadJNI.PadConfig_serializeJSON(swigCPtr, this, SWIGTYPE_p_Document__AllocatorType.getCPtr(a)), false);
  }

  public boolean parseJSON(SWIGTYPE_p_Value v) {
    return openpadJNI.PadConfig_parseJSON(swigCPtr, this, SWIGTYPE_p_Value.getCPtr(v));
  }

  public void setControls(SWIGTYPE_p_std__vectorT_openpad__ControlObject_p_t value) {
    openpadJNI.PadConfig_controls_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_openpad__ControlObject_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_openpad__ControlObject_p_t getControls() {
    long cPtr = openpadJNI.PadConfig_controls_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_openpad__ControlObject_p_t(cPtr, false);
  }

  public void setBgimg(String value) {
    openpadJNI.PadConfig_bgimg_set(swigCPtr, this, value);
  }

  public String getBgimg() {
    return openpadJNI.PadConfig_bgimg_get(swigCPtr, this);
  }

  public PadConfig() {
    this(openpadJNI.new_PadConfig(), true);
  }

}
