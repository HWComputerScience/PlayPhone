/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_openpad_WRAP_H_
#define SWIG_openpad_WRAP_H_

class SwigDirector_ServerHandler : public openpad::ServerHandler, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_ServerHandler(JNIEnv *jenv);
    virtual void onStart();
    virtual bool canJoin(openpad::Client *cli, std::string &why);
    virtual std::string getName();
    virtual std::string getDesc();
    virtual std::string getIconFilePath();
    virtual int getFilledSlots();
    virtual int getOpenSlots();
    virtual void onJoin(openpad::Client *cli);
    virtual openpad::PadConfig getDefaultControls();
    virtual void onDisconnect(openpad::Client *cli);
    virtual void onPadUpdate(openpad::Client *cli, openpad::PadUpdateObject update);
public:
    bool swig_overrides(int n) {
      return (n < 11 ? swig_override[n] : false);
    }
protected:
    bool swig_override[11];
};


#endif
